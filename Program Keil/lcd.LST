C51 COMPILER V7.00 Beta 6  LCD                                                             01/13/2019 20:13:52 PAGE 1   


C51 COMPILER V7.00 Beta 6, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd.c BROWSE INCDIR(C:\Users\BSP\Desktop\Program Keil\) DEBUG OBJECTEXTEND

stmt level    source

   1          #include "lcd.h"
   2          
   3          static void  lcden(void){
   4   1          LCD_EN_PIN = HIGH; 
   5   1          dlyms(5);
   6   1          LCD_EN_PIN = LOW; 
   7   1      }
   8          void lcdwc(INT8U LCDData){
   9   1          LCD_RS_PIN = LOW; 
  10   1          lcdwb(LCDData);
  11   1      }
  12          void lcdwd(INT8U LCDData){
  13   1          LCD_RS_PIN = HIGH; 
  14   1          lcdwb(LCDData);
  15   1      }
  16          void lcdws(INT8U *s){
  17   1              while (*s) lcdwd(*s++);
  18   1      }
  19          void lcdinit(void){
  20   1          LCD_EN_PIN          = OUTPUT_PIN; 
  21   1          LCD_RS_PIN          = OUTPUT_PIN;
  22   1          LCD_DATA_PORT       &=  0x0f;
  23   1              lcdrs();
  24   1          lcdwc(0x28);
  25   1          lcdwc(0x0C);
  26   1          lcdwc(0x06);
  27   1          lcdwc(0x01); 
  28   1              #ifdef DISPLAY_INIT
                              lcddinit();
                      #endif
  31   1      }
  32          static void lcdrs(void){
  33   1              lcdwc(0x33);
  34   1              lcdwc(0x33);
  35   1              lcdwc(0x32);
  36   1      }
  37          void lcddinit(void){
  38   1              INT8U i , j , adr;
  39   1              lcdws("  INITIALIZING");
  40   1              lcdr2();
  41   1              for ( j = 0; j < LCD_NSCRL; j++ ) {
  42   2                      adr = 0xc0;                                             // 2nd row, first coloumn
  43   2                      for ( i = 0; i < 16; i++ ) {
  44   3                              lcdwc(adr);                     
  45   3                              lcdwd(LCD_DOT);                         
  46   3                              if ( i < 8 ) dlyms(200+(50*i)); else dlyms(25);
  47   3                              lcdwc(adr);                     
  48   3                              lcdwd(LCD_SPC);                 
  49   3                              adr++;                                  // increment display aadress
  50   3                      }
  51   2              }
  52   1              lcdclr();
  53   1      }
  54          static void  lcdwb(INT8U  LCDData){
  55   1          LCD_DATA_PORT = (LCD_DATA_PORT & 0x0F)|(LCDData & 0xF0);
C51 COMPILER V7.00 Beta 6  LCD                                                             01/13/2019 20:13:52 PAGE 2   

  56   1          lcden();
  57   1          LCD_DATA_PORT = (LCD_DATA_PORT & 0x0F)|(LCDData << 4);
  58   1          lcden();
  59   1          dlyms(5);
  60   1      }
  61          void lcdclrr(INT8U rowno){
  62   1              INT8U i;
  63   1              switch (rowno) {
  64   2                      case 0:
  65   2                                      lcdr1();
  66   2                                      break;
  67   2                      case 1:
  68   2                                      lcdr2();
  69   2                                      break;
  70   2              }
  71   1              for (i = 0; i < 16; i++)
  72   1                      lcdwd(LCD_SPC);
  73   1      
  74   1      }
  75           void itoa(signed int n, char s[])
  76          {
  77   1              int i, sign;
  78   1              
  79   1              if ((sign = n) < 0)
  80   1                      n = -n;
  81   1              i = 0;
  82   1              do {
  83   2                      s[i++] = n % 10 + '0';
  84   2              } while ((n /= 10) > 0);
  85   1              if (sign < 0)
  86   1                      s[i++] = '-';
  87   1              s[i] = '\0';
  88   1              reverse(s);
  89   1      }
  90          void reverse(char s[])
  91          {
  92   1              int c,i,j;
  93   1              for (i = 0, j = strlen(s)-1; i < j; i++,j--) 
  94   1                      c = s[i], s[i] = s[j], s[j] = c;
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    535    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
